@model CSharpJamApp.Models.Player
    <style>
        img {
            max-width: 100%;
        }
        #message{
            color:white;
        }

        label, h4{
            color: white;
        }

        .slidecontainer {
            width: 100%;
        }

        .slider {
            -webkit-appearance: none;
            width: 100%;
            height: 15px;
            border-radius: 5px;
            background: #d3d3d3;
            outline: none;
            opacity: 0.7;
            -webkit-transition: .2s;
            transition: opacity .2s;
        }

            .slider:hover {
                opacity: 1;
            }

            .slider::-webkit-slider-thumb {
                -webkit-appearance: none;
                appearance: none;
                width: 25px;
                height: 25px;
                border-radius: 50%;
                background: blue;
                cursor: pointer;
            }

            .slider::-moz-range-thumb {
                width: 25px;
                height: 25px;
                border-radius: 50%;
                background: #4CAF50;
                cursor: pointer;
            }
    </style>

@{
    ViewBag.Title = "PlayerStats";
}

    <body style="background-color:blanchedalmond;background-image: url('@Model.PictureUrl');
          background-repeat: no-repeat;background-size: cover;" >
        @if (Model != null)
        {

            <div class="container-fluid">
                <h2 id="message"> @ViewBag.Message</h2>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()


                    <div class="col-md-6">
                        <img src="@Model.PictureUrl" />
                    </div>

                    <div class="form-horizontal col-md-6">
                        <h4>@Model.Name</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.PictureUrl)
                        @Html.HiddenFor(model => model.TeamId)
                        @Html.HiddenFor(model => model.Height)
                        @Html.HiddenFor(model => model.Weight)
                        @Html.HiddenFor(model => model.Rating)
                        @Html.HiddenFor(model => model.Description)


                        <div class="form-group">
                            @Html.LabelFor(model => model.Agility, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="slidecontainer">
                                    <input type="range" min="1" max="100" name="Agility" value="@Model.Agility" class="slider" id="r-Agility">
                                </div>
                                @Html.ValidationMessageFor(model => model.Agility, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="slidecontainer">
                                    <input type="range" min="1" max="100" name="Strength" value="@Model.Strength" class="slider" id="r-Strength">
                                </div>
                                @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Endurance, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="slidecontainer">
                                    <input type="range" min="1" max="100" name="Endurance" value="@Model.Endurance" class="slider" id="r-Endurance">
                                </div>
                                @Html.ValidationMessageFor(model => model.Endurance, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Aggression, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="slidecontainer">
                                    <input type="range" min="1" max="100" name="Aggression" value="@Model.Aggression" class="slider" id="r-Aggression">
                                </div>
                                @Html.ValidationMessageFor(model => model.Aggression, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Humor, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="slidecontainer">
                                    <input type="range" min="1" max="100" name="Humor" value="@Model.Humor" class="slider" id="r-Humor">
                                </div>
                                @Html.ValidationMessageFor(model => model.Humor, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TeamWork, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="slidecontainer">
                                    <input type="range" min="1" max="100" name="TeamWork" value="@Model.TeamWork" class="slider" id="r-TeamWork">
                                </div>
                                @Html.ValidationMessageFor(model => model.TeamWork, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <h2 class="text-danger">No player found!</h2>
        }


    </body>
        <script>
            var slider = document.getElementById("myRange");
            var output = document.getElementById("demo");
            output.innerHTML = slider.value;

            slider.oninput = function () {
                output.innerHTML = this.value;
            }
        </script>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
